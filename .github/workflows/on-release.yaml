name: Build and Release On Release

on:
  release:
    types: [published]

jobs:
  test:
    uses: ./.github/workflows/pytest-workflow-call.yaml
    with:
      git-ref: ${{ github.ref }}
    permissions:
      contents: read
  static-type-check:
    uses: ./.github/workflows/static-type-check-workflow-call.yaml
    with:
      git-ref: ${{ github.ref }}
    permissions:
      contents: read
  code-style-check:
    uses: ./.github/workflows/code-style-check-workflow-call.yaml
    with:
      git-ref: ${{ github.ref }}
    permissions:
      contents: read
  validate-version:
    uses: ./.github/workflows/validate-version-workflow-call.yaml
    with:
      git-ref: ${{ github.ref }}
    permissions:
      contents: read
  deploy:
    needs: [test, static-type-check, code-style-check, validate-version]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip wheel setuptools twine
          python -m pip install -e .[dev]
      - name: Build
        run: |
          python setup.py sdist bdist_wheel
          echo "asset_name=$(ls dist/*whl | cut -d / -f 2)" >> $GITHUB_ENV
      - name: Upload to GitHub
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "$GITHUB_REF_NAME" dist/* --repo "$GITHUB_REPOSITORY" --clobber
